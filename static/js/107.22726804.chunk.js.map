{"version":3,"file":"static/js/107.22726804.chunk.js","mappings":"oKAIA,MAIA,EAJoCA,IAC5BC,EAAAA,EAAAA,KAAA,OAAAC,SAAK,UCFb,GAAeC,EAAAA,EAAAA,GAAiBC,E,4ECMhC,MAAMC,EAA8BC,IAAmB,CACrDC,OAAQD,EAAME,KAAKD,SAId,SAASJ,EAAqDM,GAInE,MAAMC,UAA0BC,EAAAA,UAC9BC,MAAAA,GACE,OAAKC,KAAKb,MAAMO,QAETN,EAAAA,EAAAA,KAACQ,EAAS,IAAKI,KAAKb,SAFIC,EAAAA,EAAAA,KAACa,EAAAA,GAAQ,CAACC,GAAG,UAG9C,EAKF,OAFkBC,EAAAA,EAAAA,IAAQX,EAEnBY,CAAUP,EACnB,C","sources":["components/Music/Music.tsx","components/Music/MusicContainer.tsx","components/hoc/withAuthRedirect.tsx"],"sourcesContent":["import React from 'react'\r\n\r\ninterface MusicProps {}\r\n\r\nconst Music: React.FC<MusicProps> = props => {\r\n\treturn <div>Music</div>\r\n}\r\n\r\nexport default Music\r\n","import { withAuthRedirect } from '../hoc/withAuthRedirect'\r\nimport Music from './Music'\r\n\r\nexport default withAuthRedirect(Music)\r\n","import React from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { AppStateType } from '../../redux/redux-store'\r\n\r\ntype MapStateToPropsType = {\r\n  isAuth: boolean\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state: AppStateType): MapStateToPropsType => ({\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\n// Constrain T to include React.JSX.IntrinsicAttributes\r\nexport function withAuthRedirect<T extends React.ComponentType<any>>(Component: T) {\r\n  // Define type for props from redux\r\n  type PropsFromRedux = ConnectedProps<typeof connector>\r\n\r\n  class RedirectComponent extends React.Component<PropsFromRedux> {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to='/login' />\r\n      \r\n      return <Component {...this.props as T extends React.ComponentType<infer P> ? P : never} />\r\n    }\r\n  }\r\n\r\n  const connector = connect(mapStateToPropsForRedirect)\r\n  \r\n  return connector(RedirectComponent)\r\n}\r\n"],"names":["props","_jsx","children","withAuthRedirect","Music","mapStateToPropsForRedirect","state","isAuth","auth","Component","RedirectComponent","React","render","this","Navigate","to","connect","connector"],"sourceRoot":""}