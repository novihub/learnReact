{"version":3,"file":"static/js/558.6e9dd162.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.css","webpack://learnReact/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","webpack://learnReact/./src/components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css?c3a9","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","webpack://learnReact/./src/components/hoc/FormsControls/createFormsControls.module.css?7b4f","components/hoc/FormsControls/createFormsControls.tsx","webpack://learnReact/./src/components/Login/Login.module.css?3530"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"Profile\":\"ProfileInfo_Profile__dT5-W\",\"ProfileInfo\":\"ProfileInfo_ProfileInfo__Ss9hH\",\"Avatar\":\"ProfileInfo_Avatar__FLlXo\"};","import React from 'react';\r\nimport { reduxForm, InjectedFormProps } from 'redux-form';\r\nimport {\r\n  createField,\r\n  Input,\r\n  Textarea\r\n} from '../../../hoc/FormsControls/createFormsControls';\r\nimport classes from '../../../Login/Login.module.css'; // Adjust the import path as needed\r\nimport { ProfileType } from '../../../../types/types'; // Adjust the import path as needed\r\n\r\ninterface ProfileDataFormProps {\r\n  profile: ProfileType;\r\n  error?: string;\r\n}\r\n\r\ntype ProfileDataFormValues = {\r\n  fullName: string;\r\n  lookingForAJob: boolean;\r\n  lookingForAJobDescription: string;\r\n  aboutMe: string;\r\n  contacts: {\r\n    [key: string]: string;\r\n  };\r\n};\r\n\r\nconst ProfileDataForm: React.FC<InjectedFormProps<ProfileDataFormValues, ProfileDataFormProps> & ProfileDataFormProps> = ({\r\n  handleSubmit,\r\n  profile,\r\n  error\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <button>Save</button>\r\n      {error && <div className={classes.FormSummaryError}>{error}</div>}\r\n      <div>\r\n        <b>Full Name: </b>\r\n        {createField('Full name', 'fullName', [], Input)}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job: </b>\r\n        {createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}\r\n      </div>\r\n      <div>\r\n        <b>My professional skills :</b>\r\n        {createField(\r\n          'My professional skills',\r\n          'lookingForAJobDescription',\r\n          [],\r\n          Textarea\r\n        )}\r\n      </div>\r\n      <div>\r\n        <b>About me :</b>\r\n        {createField('About me', 'aboutMe', [], Textarea)}\r\n      </div>\r\n      <div>\r\n        <b>Contacts: </b>{' '}\r\n        {Object.keys(profile.contacts).map(key => (\r\n          <div key={key}>\r\n            <b>\r\n              {key}: {createField(key, `contacts.${key}`, [], Input)}\r\n            </b>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm<ProfileDataFormValues, ProfileDataFormProps>({\r\n  form: 'edit-profile'\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"ProfileStatus\":\"ProfileStatus_ProfileStatus__StaNE\"};","import React, { useEffect, useState } from 'react';\r\nimport classes from './ProfileStatus.module.css';\r\n\r\ninterface ProfileStatusWithHooksProps {\r\n  status: string;\r\n  updateStatus: (status: string) => void;\r\n}\r\n\r\nconst ProfileStatusWithHooks: React.FC<ProfileStatusWithHooksProps> = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.ProfileStatus}>\r\n      {editMode ? (\r\n        <div>\r\n          <input\r\n            autoFocus\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <p onDoubleClick={activateEditMode}>{props.status || 'No status'}</p>\r\n          {/* <p onDoubleClick={activateEditMode}>{props.aboutMe}</p> */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React, { useState } from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport userPhoto from '../../../assets/user.png';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm';\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\nimport { ProfileType, ProfileDataFormValues } from '../../../types/types';\r\n\r\ntype ProfileInfoProps = {\r\n  profile: ProfileType | null;\r\n  status: string;\r\n  updateStatus: (status: string) => void;\r\n  savePhoto: (file: File) => void;\r\n  saveProfile: (profile: ProfileType) => Promise<void>;\r\n  isOwner: boolean;\r\n};\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoProps> = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onMainPhotoSelected = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files.length) {\r\n      props.savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const { photos } = props.profile;\r\n\r\n  const onSubmit = (formData: ProfileDataFormValues) => {\r\n    if (!props.profile) return;\r\n\r\n    const updatedProfile: ProfileType = {\r\n      ...props.profile,\r\n      ...formData,\r\n      id: props.profile.id, \r\n    };\r\n\r\n    props.saveProfile(updatedProfile).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Profile}>\r\n      <div className={classes.Avatar}>\r\n        <img src={photos.large || userPhoto} alt='Profile' />\r\n        {props.isOwner && (\r\n          <input type='file' onChange={onMainPhotoSelected} />\r\n        )}\r\n      </div>\r\n      <div className={classes.ProfileInfo}>\r\n        <ProfileStatusWithHooks\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n        {editMode ? (\r\n          <ProfileDataForm\r\n            initialValues={props.profile as ProfileDataFormValues} \r\n            profile={props.profile}\r\n            onSubmit={onSubmit}\r\n          />\r\n        ) : (\r\n          <ProfileData\r\n            profile={props.profile}\r\n            isOwner={props.isOwner}\r\n            goToEditMode={() => setEditMode(true)}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype ContactProps = {\r\n  contactTitle: string;\r\n  contactValue: string;\r\n};\r\n\r\nconst Contact: React.FC<ContactProps> = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\ntype ProfileDataProps = {\r\n  profile: ProfileType;\r\n  isOwner: boolean;\r\n  goToEditMode: () => void;\r\n};\r\n\r\nconst ProfileData: React.FC<ProfileDataProps> = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && <button onClick={goToEditMode}>Edit</button>}\r\n      <div>\r\n        <b>Full Name: </b>\r\n        {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job: </b>\r\n        {profile.lookingForAJob ? 'yes' : 'no'}\r\n      </div>\r\n      {profile.lookingForAJob && (\r\n        <div>\r\n          <b>My professional skills:</b>\r\n          {profile.lookingForAJobDescription}\r\n        </div>\r\n      )}\r\n      <div>\r\n        <b>About me:</b> {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts:</b>\r\n        {Object.keys(profile.contacts).map(key => (\r\n          <Contact\r\n            key={key}\r\n            contactTitle={key}\r\n            contactValue={profile.contacts[key] || ''}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react'\r\nimport { ProfileProps } from '../../types/types'\r\nimport classes from './Profile.module.css'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\nconst Profile: React.FC<ProfileProps> = props => {\r\n\treturn (\r\n\t\t<div className={classes.Profile}>\r\n\t\t\t<ProfileInfo\r\n\t\t\t\tprofile={props.profile}\r\n\t\t\t\tstatus={props.status}\r\n\t\t\t\tupdateStatus={props.updateStatus}\r\n\t\t\t\tisOwner={props.isOwner}\r\n\t\t\t\tsavePhoto={props.savePhoto}\r\n\t\t\t\tsaveProfile={props.saveProfile}\r\n\t\t\t/>\r\n\t\t\t{/* MyPostsContainer should be connected to Redux and not need additional props here */}\r\n\t\t\t{/* <MyPostsContainer isOwner={props.isOwner} posts={[]}/> */}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Navigate, useParams } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport {\r\n  getStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n  setUserProfile,\r\n  updateStatus\r\n} from '../../redux/profile-reducer';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { ProfileType } from '../../types/types';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport Profile from './Profile';\r\n\r\ninterface ProfileContainerProps {\r\n  profile: ProfileType | null;\r\n  status: string;\r\n  authorizedUserId: number | null;\r\n  isAuth: boolean;\r\n  setUserProfile: (userId: number) => Promise<void>;\r\n  getStatus: (userId: number) => Promise<void>;\r\n  updateStatus: (status: string) => Promise<void>;\r\n  savePhoto: (file: File) => Promise<void>;\r\n  saveProfile: (profile: ProfileType) => Promise<void>;\r\n}\r\n\r\nconst ProfileContainer: React.FC<ProfileContainerProps> = ({\r\n  setUserProfile,\r\n  getStatus,\r\n  profile,\r\n  status,\r\n  updateStatus,\r\n  authorizedUserId,\r\n  isAuth,\r\n  savePhoto,\r\n  saveProfile\r\n}) => {\r\n  const [isOwner, setIsOwner] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const { userId } = useParams<{ userId: string }>();\r\n\r\n  const userToLoad = userId ? Number(userId) : authorizedUserId;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (userToLoad) {\r\n        setIsLoading(true);\r\n        try {\r\n          await setUserProfile(userToLoad);\r\n          await getStatus(userToLoad);\r\n          setIsOwner(Number(userToLoad) === Number(authorizedUserId));\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [userToLoad, setUserProfile, getStatus, authorizedUserId]);\r\n\r\n  if (!isAuth && !userToLoad) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Preloader />\r\n      ) : (\r\n        <Profile\r\n          isOwner={isOwner}\r\n          profile={profile}\r\n          status={status}\r\n          updateStatus={updateStatus}\r\n          savePhoto={savePhoto}\r\n          saveProfile={saveProfile}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    setUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n  })\r\n)(ProfileContainer);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Textarea\":\"createFormsControls_Textarea__Sf5XJ\",\"error\":\"createFormsControls_error__l1y6F\"};","import React from 'react'\r\nimport { Field } from 'redux-form'\r\nimport { FieldValidatorType } from '../../../utils/validators/validators'\r\nimport classes from './createFormsControls.module.css'\r\n\r\ntype ElementParamsType = {\r\n\tinput: any\r\n\tmeta: {\r\n\t\ttouched: boolean\r\n\t\terror: string\r\n\t}\r\n\tchildren?: React.ReactNode\r\n}\r\n\r\nconst Element =\r\n\t(Element: React.FC | string): React.FC<ElementParamsType> =>\r\n\t({ input, meta: { touched, error }, children, ...props }) => {\r\n\t\tconst hasError = touched && error\r\n\r\n\t\treturn (\r\n\t\t\t<div className={`${classes.Textarea} ${hasError ? classes.error : ''}`}>\r\n\t\t\t\t<Element {...input} {...props} />\r\n\t\t\t\t{hasError && <span>{error}</span>}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\nexport const Textarea = Element('textarea')\r\n\r\nexport const Input = Element('input')\r\n\r\nexport function createField<LoginFormValuesTypeKeys extends string>(\r\n\tplaceholder: string,\r\n\tname: LoginFormValuesTypeKeys,\r\n\tvalidators: Array<FieldValidatorType>,\r\n\tcomponent: string | React.FC<any>,\r\n\tprops = {},\r\n\ttext = ''\r\n) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Field\r\n\t\t\t\tvalidate={validators}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tname={name}\r\n\t\t\t\tcomponent={component}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t)\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Login\":\"Login_Login__3tId8\",\"FormSummaryError\":\"Login_FormSummaryError__QiypQ\"};"],"names":["reduxForm","form","_ref","handleSubmit","profile","error","_jsxs","onSubmit","children","_jsx","className","classes","FormSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","key","concat","props","editMode","setEditMode","useState","status","setStatus","useEffect","autoFocus","onBlur","deactivateEditMode","updateStatus","onChange","e","currentTarget","value","onDoubleClick","activateEditMode","Contact","contactTitle","contactValue","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Preloader","photos","src","large","userPhoto","alt","target","files","length","savePhoto","ProfileStatusWithHooks","ProfileDataForm","initialValues","formData","updatedProfile","id","saveProfile","then","Profile","ProfileInfo","compose","connect","state","profilePage","authorizedUserId","auth","userId","isAuth","setUserProfile","getStatus","setIsOwner","isLoading","setIsLoading","useParams","userToLoad","Number","async","fetchData","_Fragment","Navigate","to","Element","input","meta","touched","hasError","placeholder","name","validators","component","arguments","undefined","text","Field","validate"],"sourceRoot":""}