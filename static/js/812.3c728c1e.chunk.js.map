{"version":3,"file":"static/js/812.3c728c1e.chunk.js","mappings":"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","sources":["components/Login/Login.tsx","webpack://learnReact/./src/components/hoc/FormsControls/createFormsControls.module.css?7b4f","components/hoc/FormsControls/createFormsControls.tsx","utils/validators/validators.ts","webpack://learnReact/./src/components/Login/Login.module.css?3530"],"sourcesContent":["import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { InjectedFormProps, reduxForm } from 'redux-form'\r\nimport { login } from '../../redux/auth-reducer'\r\nimport { AppStateType } from '../../redux/redux-store'\r\nimport { required } from '../../utils/validators/validators'\r\nimport { createField, Input } from '../hoc/FormsControls/createFormsControls'\r\nimport classes from './Login.module.css'\r\n\r\nexport type LoginFormValuesType = {\r\n\temail: string\r\n\tpassword: string\r\n\trememberMe: boolean\r\n\tcaptcha: string\r\n}\r\n\r\ntype MapStatePropsType = {}\r\ntype MapDispatchPropsType = {}\r\ntype LoginFormValuesTypeKeys = keyof LoginFormValuesType\r\ntype LoginFormOwnProps = {\r\n\tcaptchaUrl: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<\r\n\tInjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps\r\n> = ({ handleSubmit, error, captchaUrl }) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t{/* <Field\r\n\t\t\t\t\tvalidate={[required]}\r\n\t\t\t\t\tplaceholder='email'\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\tcomponent={Input}\r\n\t\t\t\t/> */}\r\n\t\t\t{createField<LoginFormValuesTypeKeys>(\r\n\t\t\t\t'Email',\r\n\t\t\t\t'email',\r\n\t\t\t\t[required],\r\n\t\t\t\tInput\r\n\t\t\t)}\r\n\t\t\t{createField<LoginFormValuesTypeKeys>(\r\n\t\t\t\t'Password',\r\n\t\t\t\t'password',\r\n\t\t\t\t[required],\r\n\t\t\t\tInput,\r\n\t\t\t\t{\r\n\t\t\t\t\ttype: 'password'\r\n\t\t\t\t}\r\n\t\t\t)}\r\n\t\t\t{createField<LoginFormValuesTypeKeys>(\r\n\t\t\t\t'',\r\n\t\t\t\t'rememberMe',\r\n\t\t\t\t[],\r\n\t\t\t\tInput,\r\n\t\t\t\t{ type: 'checkbox' },\r\n\t\t\t\t'remember me'\r\n\t\t\t)}\r\n\t\t\t{captchaUrl && <img src={captchaUrl} alt='' />}\r\n\t\t\t{captchaUrl &&\r\n\t\t\t\tcreateField<LoginFormValuesTypeKeys>(\r\n\t\t\t\t\t'Symbols from image',\r\n\t\t\t\t\t'captcha',\r\n\t\t\t\t\t[required],\r\n\t\t\t\t\tInput,\r\n\t\t\t\t\t{}\r\n\t\t\t\t)}\r\n\t\t\t{/* <Field\r\n\t\t\t\tvalidate={[required]}\r\n\t\t\t\tplaceholder='Password'\r\n\t\t\t\tname='password'\r\n\t\t\t\ttype='password'\r\n\t\t\t\tcomponent={Input}\r\n\t\t\t/> */}\r\n\r\n\t\t\t{/* <Field type='checkbox' name='rememberMe' component={Input} /> */}\r\n\t\t\t{error && <div className={classes.FormSummaryError}>{error}</div>}\r\n\t\t\t<div>\r\n\t\t\t\t<button>Login</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({\r\n\tform: 'login'\r\n})(LoginForm)\r\n\r\nconst Login: React.FC<MapStatePropsType & MapDispatchPropsType> = () => {\r\n\tconst captchaUrl = useSelector((state: AppStateType) => state.auth.captchaUrl)\r\n\tconst isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n\tconst userId = useSelector((state: AppStateType) => state.auth.userId)\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst onSubmit = (formData: LoginFormValuesType) => {\r\n\t\tconst { email, password, rememberMe, captcha } = formData\r\n\t\tdispatch(login(email, password, rememberMe, captcha))\r\n\t}\r\n\r\n\tif (isAuth) {\r\n\t\treturn <Navigate to={`/profile/${userId}`} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.Login}>\r\n\t\t\t<h1>Access denied! You need to login :(</h1>\r\n\t\t\t<LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\r\n\t\t</div>\r\n\t)\r\n}\r\n// export default connect(\r\n// \t(state: any) => {\r\n// \t\treturn {\r\n// \t\t\tisAuth: state.auth.isAuth,\r\n// \t\t\tcaptchaUrl: state.auth.captchaUrl,\r\n// \t\t}\r\n// \t},\r\n// \t{\r\n// \t\tlogin\r\n// \t}\r\n// )(Login)\r\n\r\nexport default Login\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Textarea\":\"createFormsControls_Textarea__Sf5XJ\",\"error\":\"createFormsControls_error__l1y6F\"};","import React from 'react'\r\nimport { Field } from 'redux-form'\r\nimport { FieldValidatorType } from '../../../utils/validators/validators'\r\nimport classes from './createFormsControls.module.css'\r\n\r\ntype ElementParamsType = {\r\n\tinput: any\r\n\tmeta: {\r\n\t\ttouched: boolean\r\n\t\terror: string\r\n\t}\r\n\tchildren?: React.ReactNode\r\n}\r\n\r\nconst Element =\r\n\t(Element: React.FC | string): React.FC<ElementParamsType> =>\r\n\t({ input, meta: { touched, error }, children, ...props }) => {\r\n\t\tconst hasError = touched && error\r\n\r\n\t\treturn (\r\n\t\t\t<div className={`${classes.Textarea} ${hasError ? classes.error : ''}`}>\r\n\t\t\t\t<Element {...input} {...props} />\r\n\t\t\t\t{hasError && <span>{error}</span>}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\nexport const Textarea = Element('textarea')\r\n\r\nexport const Input = Element('input')\r\n\r\nexport function createField<LoginFormValuesTypeKeys extends string>(\r\n\tplaceholder: string,\r\n\tname: LoginFormValuesTypeKeys,\r\n\tvalidators: Array<FieldValidatorType>,\r\n\tcomponent: string | React.FC<any>,\r\n\tprops = {},\r\n\ttext = ''\r\n) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Field\r\n\t\t\t\tvalidate={validators}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tname={name}\r\n\t\t\t\tcomponent={component}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t\t{text}\r\n\t\t</div>\r\n\t)\r\n}\r\n","export type FieldValidatorType = (value: string) => string | undefined\r\n\r\nexport const required: FieldValidatorType = (value) => {\r\n\tif (value) return undefined\r\n\r\n\treturn 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\r\n\tif (value && value.length > maxLength)\r\n\t\treturn `Max length is ${maxLength} symbols`\r\n\r\n\treturn undefined\r\n}\r\n\r\nexport const maxLength10 = maxLengthCreator(10)\r\nexport const maxLength100 = maxLengthCreator(100)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Login\":\"Login_Login__3tId8\",\"FormSummaryError\":\"Login_FormSummaryError__QiypQ\"};"],"names":["LoginReduxForm","reduxForm","form","_ref","handleSubmit","error","captchaUrl","_jsxs","onSubmit","children","createField","required","Input","type","_jsx","src","alt","className","classes","FormSummaryError","Login","useSelector","state","auth","isAuth","userId","dispatch","useDispatch","Navigate","to","concat","formData","email","password","rememberMe","captcha","login","Element","input","meta","touched","props","hasError","Textarea","placeholder","name","validators","component","arguments","length","undefined","text","Field","validate","value","maxLengthCreator","maxLength","maxLength100"],"sourceRoot":""}