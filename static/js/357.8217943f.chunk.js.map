{"version":3,"file":"static/js/357.8217943f.chunk.js","mappings":"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","sources":["redux/users-selectors.ts","webpack://learnReact/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.tsx","webpack://learnReact/./src/components/Users/User/User.module.css?cfea","components/Users/User/User.tsx","webpack://learnReact/./src/components/Users/Users.module.css?b9d0","components/Users/UsersSearchForm.tsx","components/Users/UsersPage.tsx"],"sourcesContent":["import { AppStateType } from './redux-store'\n\n// Для селектора, который не использует дополнительную логику, можно просто использовать:\nexport const getUsers = (state: AppStateType) => state.usersPage.users;\n\n// Остальные селекторы:\nexport const getPageSize = (state: AppStateType) => state.usersPage.pageSize;\nexport const getTotalUsersCount = (state: AppStateType) => state.usersPage.totalUsersCount;\nexport const getCurrentPage = (state: AppStateType) => state.usersPage.currentPage;\nexport const getIsFetching = (state: AppStateType) => state.usersPage.isFetching;\nexport const getFollowingInProgress = (state: AppStateType) => state.usersPage.followingInProgress;\nexport const getFilter = (state: AppStateType) => state.usersPage.filter","// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__CRNLp\",\"PageNumbers\":\"Paginator_PageNumbers__-iRYo\",\"PageNumber\":\"Paginator_PageNumber__sj7AQ\"};","import React from 'react'\nimport classes from './Paginator.module.css'\n\ntype PropsType = {\n\ttotalUsersCount: number\n\tpageSize: number\n\tcurrentPage: number\n\tonPageChanged: (PageNumber: number) => void\n}\n\nconst Paginator: React.FC<PropsType> = ({\n\ttotalUsersCount,\n\tpageSize,\n\tcurrentPage,\n\tonPageChanged\n}) => {\n\tlet pagesCount = Math.ceil(totalUsersCount / pageSize)\n\n\tlet pages: Array<number> = []\n\n\tfor (let i = 1; i <= pagesCount; i++) {\n\t\tpages.push(i)\n\t}\n\n\tlet slicedPages\n\tlet curPage = currentPage\n\tcurPage - 6 < 0\n\t\t? (slicedPages = pages.slice(0, 10))\n\t\t: (slicedPages = pages.slice(curPage - 6, curPage + 5))\n\n\treturn (\n\t\t<div className={classes.PageNumbers}>\n\t\t\t{slicedPages.map(p => (\n\t\t\t\t<span\n\t\t\t\t\tkey={p}\n\t\t\t\t\tonClick={() => onPageChanged(p)}\n\t\t\t\t\tclassName={`${classes.PageNumber} ${\n\t\t\t\t\t\tcurrentPage === p ? classes.selectedPage : ''\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t{p}\n\t\t\t\t</span>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default Paginator\n","// extracted by mini-css-extract-plugin\nexport default {\"User\":\"User_User__isonU\",\"UserImg\":\"User_UserImg__ky4D4\"};","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport userPhoto from '../../../assets/user.png'\nimport { follow, unfollow } from '../../../redux/users-reducer'\nimport { getFollowingInProgress } from '../../../redux/users-selectors'\nimport { UserType } from '../../../types/types'\nimport classes from './User.module.css'\n\ntype PropsType = {\n\tuser: UserType\n}\nconst User: React.FC<PropsType> = ({ user }) => {\n\tconst followingInProgress = useSelector(getFollowingInProgress)\n\n\tconst dispatch = useDispatch()\n\n\tconst onFollow = () => {\n\t\tdispatch(follow(user.id))\n\t}\n\n\tconst onUnfollow = () => {\n\t\tdispatch(unfollow(user.id))\n\t}\n\n\treturn (\n\t\t<div className={classes.User}>\n\t\t\t<div>\n\t\t\t\t<NavLink to={'/profile/' + user.id}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclassName={classes.UserImg}\n\t\t\t\t\t\tsrc={user.photos?.small || userPhoto}\n\t\t\t\t\t\talt=''\n\t\t\t\t\t/>\n\t\t\t\t</NavLink>\n\t\t\t\t<div>\n\t\t\t\t\t{user.followed ? (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tdisabled={followingInProgress.includes(user.id)}\n\t\t\t\t\t\t\tonClick={onUnfollow}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tUnfollow\n\t\t\t\t\t\t</button>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tdisabled={followingInProgress.includes(user.id)}\n\t\t\t\t\t\t\tonClick={onFollow}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tFollow\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<h3>{user.name}</h3>\n\t\t\t\t<h5>{user.status}</h5>\n\t\t\t\t<div>\n\t\t\t\t\t<p>{user.location?.country || 'Unknown country'}</p>\n\t\t\t\t\t<p>{user.location?.city || 'Unknown city'}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default User\n","// extracted by mini-css-extract-plugin\nexport default {\"Users\":\"Users_Users__i6ydy\"};","import { Field, Form, Formik } from 'formik'\nimport React from 'react'\nimport { FilterType } from '../../redux/users-reducer'\n\nconst UsersSearchFormValidate = (values: any) => {\n\tconst errors = {}\n\t// if (!values.email) {\n\t// \terrors.email = 'Required'\n\t// } else if (\n\t// \t!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n\t// ) {\n\t// \terrors.email = 'Invalid email address'\n\t// }\n\treturn errors\n}\n\n// interface UsersSearchFormObjectType {\n// \tterm: string\n// }\n\ntype UsersSearchFormPropsType = {\n\tonFilterChanged: (filter: FilterType) => void\n\tfilter: FilterType\n}\n\nconst UsersSearchForm: React.FC<UsersSearchFormPropsType> = ({\n\tonFilterChanged,\n\tfilter\n}) => {\n\tconst submit = (\n\t\tvalues: FilterType,\n\t\t{ setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }\n\t) => {\n\t\tonFilterChanged(values)\n\t\tsetSubmitting(false)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{...filter}}\n\t\t\t\tvalidate={UsersSearchFormValidate}\n\t\t\t\tonSubmit={submit}\n\t\t\t>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\thandleChange,\n\t\t\t\t\thandleBlur,\n\t\t\t\t\thandleSubmit,\n\t\t\t\t\tisSubmitting\n\t\t\t\t\t/* and other goodies */\n\t\t\t\t}) => (\n\t\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='term'\n\t\t\t\t\t\t\tplaceholder='Search'\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\tvalue={values.term}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Field as='select' name='isFollowed'>\n\t\t\t\t\t\t\t<option value='null'>All</option>\n\t\t\t\t\t\t\t<option value='true'>Followed</option>\n\t\t\t\t\t\t\t<option value='false'>Unfollowed</option>\n\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t<button type='submit' disabled={isSubmitting}>\n\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t)\n}\n\nexport default UsersSearchForm\n","import React, { FC, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { FilterType, getUsersAPI } from '../../redux/users-reducer'\nimport {\n\tgetCurrentPage,\n\tgetFilter,\n\tgetIsFetching,\n\tgetPageSize,\n\tgetTotalUsersCount,\n\tgetUsers\n} from '../../redux/users-selectors'\nimport Paginator from '../common/Paginator/Paginator'\nimport User from './User/User'\nimport classes from './Users.module.css'\nimport UsersSearchForm from './UsersSearchForm'\nimport Preloader from '../common/Preloader/Preloader'\n\ninterface PropsType {}\n\nconst Users: FC<PropsType> = () => {\n\tconst totalUsersCount = useSelector(getTotalUsersCount)\n\tconst currentPage = useSelector(getCurrentPage)\n\tconst pageSize = useSelector(getPageSize)\n\tconst users = useSelector(getUsers)\n\tconst filter = useSelector(getFilter)\n\tconst isFetching = useSelector(getIsFetching)\n\n\tconst dispatch = useDispatch()\n\tconst location = useLocation()\n\tconst navigate = useNavigate()\n\n\tuseEffect(() => {\n\t\tconst params = new URLSearchParams()\n\t\tparams.set('page', String(currentPage))\n\t\tparams.set('count', String(pageSize))\n\t\tparams.set('term', filter.term)\n\t\tparams.set('friend', String(filter.isFollowed))\n\n\t\tnavigate({\n\t\t\tpathname: '/users',\n\t\t\tsearch: params.toString()\n\t\t})\n\t}, [filter, currentPage, pageSize, navigate])\n\n\tuseEffect(() => {\n\t\tconst query = new URLSearchParams(location.search)\n\t\tlet actualPage = currentPage\n\t\tlet actualFilter = filter\n\t\tconst queryFriend = query.get('friend')\n\t\tconst queryPage = query.get('page')\n\t\tconst queryTerm = query.get('term')\n\n\t\tif (queryPage) actualPage = +queryPage\n\t\tif (queryTerm) actualFilter = { ...actualFilter, term: queryTerm }\n\n\t\tswitch (queryFriend) {\n\t\t\tcase 'null':\n\t\t\t\tactualFilter = { ...actualFilter, isFollowed: null }\n\t\t\t\tbreak\n\t\t\tcase 'true':\n\t\t\t\tactualFilter = { ...actualFilter, isFollowed: true }\n\t\t\t\tbreak\n\t\t\tcase 'false':\n\t\t\t\tactualFilter = { ...actualFilter, isFollowed: false }\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\n\t\tdispatch(getUsersAPI(actualPage, pageSize, actualFilter))\n\t}, [location.search, dispatch])\n\n\tconst onPageChanged = (pageNumber: number) => {\n\t\tdispatch(getUsersAPI(pageNumber, pageSize, filter))\n\t}\n\n\tconst onFilterChanged = (filter: FilterType) => {\n\t\tdispatch(getUsersAPI(1, pageSize, filter))\n\t}\n\n\tif (isFetching) return <Preloader />\n\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<h1>Search</h1>\n\t\t\t\t<UsersSearchForm onFilterChanged={onFilterChanged} filter={filter} />\n\t\t\t</div>\n\t\t\t<div className={classes.Users}>\n\t\t\t\t{users.map(u => (\n\t\t\t\t\t<User key={u.id} user={u} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t<Paginator\n\t\t\t\ttotalUsersCount={totalUsersCount}\n\t\t\t\tpageSize={pageSize}\n\t\t\t\tcurrentPage={currentPage}\n\t\t\t\tonPageChanged={onPageChanged}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default Users\n"],"names":["getUsers","state","usersPage","users","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getFilter","filter","_ref","slicedPages","onPageChanged","pagesCount","Math","ceil","pages","i","push","curPage","slice","_jsx","className","classes","children","map","p","onClick","concat","_user$photos","_user$location","_user$location2","user","useSelector","dispatch","useDispatch","_jsxs","NavLink","to","id","src","photos","small","userPhoto","alt","followed","disabled","includes","onUnfollow","unfollow","onFollow","follow","name","status","location","country","city","UsersSearchFormValidate","values","onFilterChanged","Formik","initialValues","validate","onSubmit","submit","_ref2","setSubmitting","_ref3","handleChange","handleBlur","handleSubmit","isSubmitting","Form","Field","type","placeholder","onChange","onBlur","value","term","as","Users","useLocation","navigate","useNavigate","useEffect","params","URLSearchParams","set","String","isFollowed","pathname","search","toString","query","actualPage","actualFilter","queryFriend","get","queryPage","queryTerm","getUsersAPI","Preloader","UsersSearchForm","u","User","Paginator","pageNumber"],"sourceRoot":""}